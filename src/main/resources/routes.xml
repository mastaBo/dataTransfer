<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>file:config/config.properties</value>
        </property>
    </bean>
<!--  <propertyPlaceholder id="placeholder" location="classpath:config.properties"/>-->
    
    <bean id="proc" class="bo.masta.datatransfer.DataProcessor" />

<!-- this is the JDBC data source which uses an in-memory only Apache Derby database -->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
  <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
  <property name="url" value="jdbc:mysql://${db_host}:${db_port}/${db_name}"/>
  <property name="username" value="${user}"/>
  <!--<property name="password" value="${pass}"/>-->
</bean>
 
<!-- configure the Camel SQL component to use the JDBC data source -->
<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
  <property name="dataSource" ref="dataSource"/>
</bean>
<!--<bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">

    <beans:property name="nameCoder">
        <beans:bean class="com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder">

            <beans:constructor-arg index="0" value="_-"/>
            <beans:constructor-arg index="1" value="_"/>
        </beans:bean>
    </beans:property>
    <beans:property name="fieldAliases">
        <util:map id="aliases">
            <beans:entry key="com.billup.beans.Data.extData" value="ext_data"/>
        </util:map>
    </beans:property>
</bean>-->
    
    <camelContext trace="true" xmlns="http://camel.apache.org/schema/spring">   
    
<!--        <route>
            <from uri="quartz://myGroup/myTimerName?trigger.repeatCount=0" />
            <to uri="http://www.hobbycenter.ru/API/list.php?login=MPULXNRIKF&amp;type=xml&amp;code=products_all_new&amp;key=55af9f18c12483f15d14149299722836" />
            <to uri="xslt:transform.xsl" />
            
            <unmarshal ref="xstream-utf8" />

            <to uri="file:target/mesages"/>
        
        </route>-->
        
        <route>
<!--            <from uri="file:src/data" />
            <convertBodyTo type="java.lang.String" />-->
            <from uri="quartz://myGroup/myTimerName?trigger.repeatCount=0" />
            <to uri="http://www.hobbycenter.ru/API/list.php?login=MPULXNRIKF&amp;type=xml&amp;code=products_all_new&amp;key=55af9f18c12483f15d14149299722836" />
            <to uri="xslt:transform.xsl" />
            <to uri="file:target/tmp" />
            <process ref="proc" />
            <to uri="file:target/tmp2" />
            <to uri="jdbc:dataSource" />
            <log message="### Finished DB update. ###" />
            <!--<to uri="file:target/mesages"/>-->
        </route>
<!--        <route>
            <from uri="quartz://myGroup/myTimerName?trigger.repeatCount=0" />
            <setBody>
                <constant>select * from partnersStoreAmount</constant>
            </setBody>
            <to uri="jdbc:dataSource" />
            <to uri="mock:result" />
        </route>    -->
    </camelContext>

</beans>
